@use "sass:map";

@import "config";

@mixin font-face($font-family, $url, $weight, $style) {
	@font-face {
		src:
			url("../fonts/#{$url}.woff2") format("woff2"),
			url("../fonts/#{$url}.woff") format("woff");
		font-family: "#{$font-family}";
		font-weight: #{$weight};
		font-style: $style;
		font-display: swap;
	}
}

@mixin hover {
	@media (any-hover: hover) {
		&:hover {
			@content;
		}
	}
}

@mixin touch {
	@media (pointer: coarse) {
		@content;
	}
}

@mixin icon($icon-name, $sprite-type: "mono", $type: "before") {
	&::#{$type} {
		content: "";
		display: inline-block;

		@if $sprite-type == "mono" {
			-webkit-mask-image: url("../images/sprite-" + $sprite-type + ".svg#" + $icon-name);
			mask-image: url("../images/sprite-" + $sprite-type + ".svg#" + $icon-name);
			-webkit-mask-position: center;
			mask-position: center;
			-webkit-mask-repeat: no-repeat;
			mask-repeat: no-repeat;
			-webkit-mask-size: cover;
			mask-size: cover;
			background-color: currentcolor;
		} @else {
			background-image: url("../images/sprite-" + $sprite-type + ".svg#" + $icon-name);
			background-position: center;
			background-size: cover;
			background-repeat: no-repeat;
			background-color: var(--transparent);
		}
	}
}

@mixin before() {
	content: "";
	display: inline-block;

	@content;
}

@mixin pseudo($type: "before") {
	&::#{$type} {
		content: "";
		display: inline-block;
	}
}

@mixin media($min, $max) {
	@media all and (min-width: map.get($breakpoint, $min)) and (max-width: map.get($breakpoint, $max) - 1) {
		@content;
	}
}

@mixin media-max($max) {
	@media all and (max-width: map.get($breakpoint, $max)) {
		@content;
	}
}

@mixin media-min($min) {
	@media all and (min-width: map.get($breakpoint, $min)) {
		@content;
	}
}

@mixin mobile() {
	@include media-max("tablet") {
		@content;
	}
}

@mixin tablet() {
	@include media-min("tablet") {
		@content;
	}
}

@mixin laptop() {
	@include media-min("laptop") {
		@content;
	}
}

@mixin semi() {
	@include media-min("semi") {
		@content;
	}
}

@mixin desktop() {
	@include media-min("desktop") {
		@content;
	}
}

@mixin hdtv() {
	@include media-min("large") {
		@content;
	}
}

@mixin hardware($backface: true, $perspective: 1000) {
	perspective: $perspective;

	@if $backface {
		backface-visibility: hidden;
	}
}

/*
Анимация через keyframes
Usage:
@include keyframes(background) {
   0% {
     background: white;
   }
   50% {
     background: lightblue;
   }
   100% {
     background: royalblue;
   }
}
 */

@mixin keyframes($name) {
	@keyframes #{$name} {
		@content;
	}

	@keyframes #{$name} {
		@content;
	}

	@keyframes #{$name} {
		@content;
	}
}

// Обрезка длинного текста с многоточием
@mixin text-shorten {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

/*stylelint-disable*/

@mixin placeholder {
	&::-webkit-input-placeholder {
		@content;
	}

	&::-moz-placeholder {
		@content;
	}

	&:-moz-placeholder {
		@content;
	}

	&::input-placeholder {
		@content;
	}

	&:ms-input-placeholder {
		@content;
	}

	&:input-placeholder {
		@content;
	}

	&::placeholder {
		@content;
	}

	&:placeholder {
		@content;
	}

}

/*stylelint-enable*/
